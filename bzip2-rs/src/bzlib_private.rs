#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(non_camel_case_types)]
#![allow(unused_assignments)]
#![allow(unreachable_patterns)]
#![allow(unused_mut)]

#[derive(PartialEq, Clone, Copy)]
#[repr(C)]
pub
struct DState <'a>
{
  pub strm: &'a [crate::bzlib::bz_stream],
  pub state: i32,
  pub state_out_ch: u8,
  pub state_out_len: i32,
  pub blockRandomised: u8,
  pub rNToGo: i32,
  pub rTPos: i32,
  pub bsBuff: u32,
  pub bsLive: i32,
  pub blockSize100k: i32,
  pub smallDecompress: u8,
  pub currBlockNo: i32,
  pub verbosity: i32,
  pub origPtr: i32,
  pub tPos: u32,
  pub k0: i32,
  pub unzftab: [i32; 256],
  pub nblock_used: i32,
  pub cftab: [i32; 257],
  pub cftabCopy: [i32; 257],
  pub tt: &'a [u32],
  pub ll16: &'a [u16],
  pub ll4: &'a [u8],
  pub storedBlockCRC: u32,
  pub storedCombinedCRC: u32,
  pub calculatedBlockCRC: u32,
  pub calculatedCombinedCRC: u32,
  pub nInUse: i32,
  pub inUse: [u8; 256],
  pub inUse16: [u8; 16],
  pub seqToUnseq: [u8; 256],
  pub mtfa: [u8; 4096],
  pub mtfbase: [i32; 16],
  pub selector: [u8; 18002],
  pub selectorMtf: [u8; 18002],
  pub len: [[u8; 258]; 6],
  pub limit: [[i32; 258]; 6],
  pub base: [[i32; 258]; 6],
  pub perm: [[i32; 258]; 6],
  pub minLens: [i32; 6],
  pub save_i: i32,
  pub save_j: i32,
  pub save_t: i32,
  pub save_alphaSize: i32,
  pub save_nGroups: i32,
  pub save_nSelectors: i32,
  pub save_EOB: i32,
  pub save_groupNo: i32,
  pub save_groupPos: i32,
  pub save_nextSym: i32,
  pub save_nblockMAX: i32,
  pub save_nblock: i32,
  pub save_es: i32,
  pub save_N: i32,
  pub save_curr: i32,
  pub save_zt: i32,
  pub save_zn: i32,
  pub save_zvec: i32,
  pub save_zj: i32,
  pub save_gSel: i32,
  pub save_gMinlen: i32,
  pub save_gLimit: &'a [i32],
  pub save_gBase: &'a [i32],
  pub save_gPerm: &'a [i32]
}

#[derive(PartialEq)]
#[repr(C)]
pub
struct EState <'a>
{
  pub strm: &'a [crate::bzlib::bz_stream],
  pub mode: i32,
  pub state: i32,
  pub avail_in_expect: u32,
  pub arr1: &'a mut [u32],
  pub arr2: &'a mut [u32],
  pub ftab: &'a mut [u32],
  pub origPtr: i32,
  pub ptr: &'a mut [u32],
  pub block: &'a mut [u8],
  pub zbits_ofs: usize,
  pub workFactor: i32,
  pub state_in_ch: u32,
  pub state_in_len: i32,
  pub rNToGo: i32,
  pub rTPos: i32,
  pub nblock: i32,
  pub nblockMAX: i32,
  pub numZ: i32,
  pub state_out_pos: i32,
  pub nInUse: i32,
  pub inUse: [u8; 256],
  pub unseqToSeq: [u8; 256],
  pub bsBuff: u32,
  pub bsLive: i32,
  pub blockCRC: u32,
  pub combinedCRC: u32,
  pub verbosity: i32,
  pub blockNo: i32,
  pub blockSize100k: i32,
  pub nMTF: i32,
  pub mtfFreq: [i32; 258],
  pub selector: [u8; 18002],
  pub selectorMtf: [u8; 18002],
  pub len: [[u8; 258]; 6],
  pub code: [[i32; 258]; 6],
  pub rfreq: [[i32; 258]; 6],
  pub len_pack: [[u32; 4]; 258]
}
